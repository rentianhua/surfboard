//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add Business Module" recipe.
//
// This class contains placeholder methods for the common module initialization 
// tasks, such as adding services, or user-interface element
//
// For more information see: 
// ms-help://MS.VSCC.v90/MS.VSIPCC.v90/ms.practices.scsf.2008apr/SCSF/html/02-08-060-Add_Business_Module_Next_Steps.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using HiiP.Infrastructure.Interface;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.Commands;
using HiiP.Framework.Settings.Interface.Constants;
using HiiP.Infrastructure.Interface.BusinessEntities;

namespace HiiP.Framework.Settings
{
    public class ModuleController : WorkItemController
    {
        public override void Run()
        {
            ExtendMenu();
        }

        private void ExtendMenu()
        {
            this.LoadAdministrationMenu();
           
            ActionCatalogService.Execute(FunctionNames.SettingsModuleID, WorkItem, this, null);
            ActionCatalogService.Execute(FunctionNames.CodeTableMaintenanceID, WorkItem, this, null);
            ActionCatalogService.Execute(FunctionNames.LoggingFilterMaintenanceID, WorkItem, this, null);
            ActionCatalogService.Execute(FunctionNames.HomePageRefreshSettingsMaintenanceID, WorkItem, this, null);
            ActionCatalogService.Execute(FunctionNames.MessageMaintenanceID, WorkItem, this, null);
        }

        [Action(FunctionNames.SettingsModuleID)]
        public void ShowSettingsMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "Settings");
        }

        [Action(FunctionNames.CodeTableMaintenanceID)]
        public void ShowCodeTableMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "Code Table Maintenance");
        }

        [Action(FunctionNames.LoggingFilterMaintenanceID)]
        public void ShowLoggingFilterMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "Logging Filter Maintenance");
        }

        [CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowCodeTable)]
        public void ShowCodeTableView(object sender, EventArgs e)
        {
            ShowViewInWorkspace<CodeTableMaintain>(FunctionNames.CodeTableMaintenanceID);
        }

        [CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowLoggingFilterMaintain)]
        public void ShowLoggingFilterView(object sender, EventArgs e)
        {
            ViewParameter parameter = new ViewParameter(FunctionNames.LoggingFilterMaintenanceID);
            parameter.AppTitleData = new AppTitleData(FunctionNames.LoggingFilterMaintenanceName, 
                FunctionNames.LoggingFilterMaintenanceScreenID);

            ShowViewInWorkspace<LoggingFilterMaintain>(parameter);
        }

        [Action(FunctionNames.MessageMaintenanceID)]
        public void ShowMessageMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "Message Maintenance");
        }

        [CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowMessage)]
        public void ShowMessageView(object sender, EventArgs e)
        {
            ShowViewInWorkspace<MessageMaintain>(FunctionNames.MessageMaintenanceID);
        }

        [CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowMessageDetail)]
        public void ShowMessageDetail(object sender, EventArgs e)
        {
            ShowViewInWorkspace<MessageDetailView>(FunctionNames.MessageDetailID);
        }

        [Action(FunctionNames.LoggingSettingsMaintenanceID)]
        public void ShowLoggingSettingsMenu(object caller, object target)
        {
            //UIElementBuilder.BuildMenuItem(WorkItem, "Logging settings maintenance");
        }

        //[CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowLoggingSettingsMaintain)]
        //public void ShowLoggingSettingsView(object sender, EventArgs e)
        //{
        //    ShowViewInWorkspace<LoggingConfiguration>(FunctionNames.LoggingSettingsMaintenanceID);
        //}

        [Action(FunctionNames.ExceptionSettingsMaintenanceID)]
        public void ShowExceptionHandlingSettingsMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "Exception settings maintenance");
        }

        //[CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowExceptionSettingsMaintain)]
        //public void ShowExceptionSettingsView(object sender, EventArgs e)
        //{
        //    ShowViewInWorkspace<ExceptionHandlingConfiguration>(FunctionNames.ExceptionSettingsMaintenanceID);
        //}

        [Action(FunctionNames.BatchJobServiceSettingsMaintenanceID)]
        public void ShowBatchJobServiceSettingsMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "BatchJob service settings maintenance");
        }

        //[CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowBatchJobServiceSettingsMaintain)]
        //public void ShowBatchJobServiceSettingsView(object sender, EventArgs e)
        //{
        //    ShowViewInWorkspace<BatchJobServiceConfiguration>(FunctionNames.BatchJobServiceSettingsMaintenanceID);
        //}

        [Action(FunctionNames.HomePageRefreshSettingsMaintenanceID)]
        public void ShowHomePageRefreshSettingsMenu(object caller, object target)
        {
            UIElementBuilder.BuildMenuItem(WorkItem, "HomePage refresh settings maintenance");
        }

        [CommandHandler(HiiP.Framework.Settings.Interface.Constants.CommandNames.ShowHomePageRefreshSettingsMaintain)]
        public void ShowHomePageRefreshSettingsView(object sender, EventArgs e)
        {
            ShowViewInWorkspace<HomePageRefreshConfiguration>(FunctionNames.HomePageRefreshSettingsMaintenanceID);
        }
    }
}
