//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HiiP.Framework.Security.UserManagement.BusinessEntity {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OfficesDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OfficesDataSet : global::System.Data.DataSet {
        
        private CM_LookupOrganisationalUnitDataTable tableCM_LookupOrganisationalUnit;
        
        private CM_LookupOrganisationalUnitByTypeDataTable tableCM_LookupOrganisationalUnitByType;
        
        private global::System.Data.DataRelation relationFK_LookupOrganisationalUnitByType_OrganisationalUnitID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OfficesDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OfficesDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CM_LookupOrganisationalUnit"] != null)) {
                    base.Tables.Add(new CM_LookupOrganisationalUnitDataTable(ds.Tables["CM_LookupOrganisationalUnit"]));
                }
                if ((ds.Tables["CM_LookupOrganisationalUnitByType"] != null)) {
                    base.Tables.Add(new CM_LookupOrganisationalUnitByTypeDataTable(ds.Tables["CM_LookupOrganisationalUnitByType"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CM_LookupOrganisationalUnitDataTable CM_LookupOrganisationalUnit {
            get {
                return this.tableCM_LookupOrganisationalUnit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CM_LookupOrganisationalUnitByTypeDataTable CM_LookupOrganisationalUnitByType {
            get {
                return this.tableCM_LookupOrganisationalUnitByType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OfficesDataSet cln = ((OfficesDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CM_LookupOrganisationalUnit"] != null)) {
                    base.Tables.Add(new CM_LookupOrganisationalUnitDataTable(ds.Tables["CM_LookupOrganisationalUnit"]));
                }
                if ((ds.Tables["CM_LookupOrganisationalUnitByType"] != null)) {
                    base.Tables.Add(new CM_LookupOrganisationalUnitByTypeDataTable(ds.Tables["CM_LookupOrganisationalUnitByType"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCM_LookupOrganisationalUnit = ((CM_LookupOrganisationalUnitDataTable)(base.Tables["CM_LookupOrganisationalUnit"]));
            if ((initTable == true)) {
                if ((this.tableCM_LookupOrganisationalUnit != null)) {
                    this.tableCM_LookupOrganisationalUnit.InitVars();
                }
            }
            this.tableCM_LookupOrganisationalUnitByType = ((CM_LookupOrganisationalUnitByTypeDataTable)(base.Tables["CM_LookupOrganisationalUnitByType"]));
            if ((initTable == true)) {
                if ((this.tableCM_LookupOrganisationalUnitByType != null)) {
                    this.tableCM_LookupOrganisationalUnitByType.InitVars();
                }
            }
            this.relationFK_LookupOrganisationalUnitByType_OrganisationalUnitID = this.Relations["FK_LookupOrganisationalUnitByType_OrganisationalUnitID"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OfficesDataSet";
            this.Prefix = "";
            this.Namespace = "http://hiip.ooh.dhs.vic.gov.au/OfficesDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCM_LookupOrganisationalUnit = new CM_LookupOrganisationalUnitDataTable();
            base.Tables.Add(this.tableCM_LookupOrganisationalUnit);
            this.tableCM_LookupOrganisationalUnitByType = new CM_LookupOrganisationalUnitByTypeDataTable();
            base.Tables.Add(this.tableCM_LookupOrganisationalUnitByType);
            this.relationFK_LookupOrganisationalUnitByType_OrganisationalUnitID = new global::System.Data.DataRelation("FK_LookupOrganisationalUnitByType_OrganisationalUnitID", new global::System.Data.DataColumn[] {
                        this.tableCM_LookupOrganisationalUnit.OrganisationalUnitIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitIDColumn}, false);
            this.Relations.Add(this.relationFK_LookupOrganisationalUnitByType_OrganisationalUnitID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCM_LookupOrganisationalUnit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCM_LookupOrganisationalUnitByType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OfficesDataSet ds = new OfficesDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CM_LookupOrganisationalUnitRowChangeEventHandler(object sender, CM_LookupOrganisationalUnitRowChangeEvent e);
        
        public delegate void CM_LookupOrganisationalUnitByTypeRowChangeEventHandler(object sender, CM_LookupOrganisationalUnitByTypeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CM_LookupOrganisationalUnitDataTable : global::System.Data.TypedTableBase<CM_LookupOrganisationalUnitRow> {
            
            private global::System.Data.DataColumn columnOrganisationalUnitID;
            
            private global::System.Data.DataColumn columnOrganisationalUnitName;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitDataTable() {
                this.TableName = "CM_LookupOrganisationalUnit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CM_LookupOrganisationalUnitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CM_LookupOrganisationalUnitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitIDColumn {
                get {
                    return this.columnOrganisationalUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitNameColumn {
                get {
                    return this.columnOrganisationalUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow this[int index] {
                get {
                    return ((CM_LookupOrganisationalUnitRow)(this.Rows[index]));
                }
            }
            
            public event CM_LookupOrganisationalUnitRowChangeEventHandler CM_LookupOrganisationalUnitRowChanging;
            
            public event CM_LookupOrganisationalUnitRowChangeEventHandler CM_LookupOrganisationalUnitRowChanged;
            
            public event CM_LookupOrganisationalUnitRowChangeEventHandler CM_LookupOrganisationalUnitRowDeleting;
            
            public event CM_LookupOrganisationalUnitRowChangeEventHandler CM_LookupOrganisationalUnitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCM_LookupOrganisationalUnitRow(CM_LookupOrganisationalUnitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow AddCM_LookupOrganisationalUnitRow(string OrganisationalUnitID, string OrganisationalUnitName, System.DateTime EffectiveStartDate, System.DateTime EffectiveEndDate) {
                CM_LookupOrganisationalUnitRow rowCM_LookupOrganisationalUnitRow = ((CM_LookupOrganisationalUnitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrganisationalUnitID,
                        OrganisationalUnitName,
                        EffectiveStartDate,
                        EffectiveEndDate};
                rowCM_LookupOrganisationalUnitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCM_LookupOrganisationalUnitRow);
                return rowCM_LookupOrganisationalUnitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow FindByOrganisationalUnitID(string OrganisationalUnitID) {
                return ((CM_LookupOrganisationalUnitRow)(this.Rows.Find(new object[] {
                            OrganisationalUnitID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CM_LookupOrganisationalUnitDataTable cln = ((CM_LookupOrganisationalUnitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CM_LookupOrganisationalUnitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrganisationalUnitID = base.Columns["OrganisationalUnitID"];
                this.columnOrganisationalUnitName = base.Columns["OrganisationalUnitName"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrganisationalUnitID = new global::System.Data.DataColumn("OrganisationalUnitID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitID);
                this.columnOrganisationalUnitName = new global::System.Data.DataColumn("OrganisationalUnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitName);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrganisationalUnitID}, true));
                this.columnOrganisationalUnitID.AllowDBNull = false;
                this.columnOrganisationalUnitID.Unique = true;
                this.columnOrganisationalUnitID.MaxLength = 50;
                this.columnOrganisationalUnitName.AllowDBNull = false;
                this.columnOrganisationalUnitName.MaxLength = 50;
                this.columnEffectiveStartDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow NewCM_LookupOrganisationalUnitRow() {
                return ((CM_LookupOrganisationalUnitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CM_LookupOrganisationalUnitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CM_LookupOrganisationalUnitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CM_LookupOrganisationalUnitRowChanged != null)) {
                    this.CM_LookupOrganisationalUnitRowChanged(this, new CM_LookupOrganisationalUnitRowChangeEvent(((CM_LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CM_LookupOrganisationalUnitRowChanging != null)) {
                    this.CM_LookupOrganisationalUnitRowChanging(this, new CM_LookupOrganisationalUnitRowChangeEvent(((CM_LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CM_LookupOrganisationalUnitRowDeleted != null)) {
                    this.CM_LookupOrganisationalUnitRowDeleted(this, new CM_LookupOrganisationalUnitRowChangeEvent(((CM_LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CM_LookupOrganisationalUnitRowDeleting != null)) {
                    this.CM_LookupOrganisationalUnitRowDeleting(this, new CM_LookupOrganisationalUnitRowChangeEvent(((CM_LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCM_LookupOrganisationalUnitRow(CM_LookupOrganisationalUnitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OfficesDataSet ds = new OfficesDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CM_LookupOrganisationalUnitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CM_LookupOrganisationalUnitByTypeDataTable : global::System.Data.TypedTableBase<CM_LookupOrganisationalUnitByTypeRow> {
            
            private global::System.Data.DataColumn columnOrganisationalUnitTypeID;
            
            private global::System.Data.DataColumn columnOrganisationalUnitID;
            
            private global::System.Data.DataColumn columnCodeID;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnOrganisationalUnitName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeDataTable() {
                this.TableName = "CM_LookupOrganisationalUnitByType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CM_LookupOrganisationalUnitByTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CM_LookupOrganisationalUnitByTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitTypeIDColumn {
                get {
                    return this.columnOrganisationalUnitTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitIDColumn {
                get {
                    return this.columnOrganisationalUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeIDColumn {
                get {
                    return this.columnCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitNameColumn {
                get {
                    return this.columnOrganisationalUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow this[int index] {
                get {
                    return ((CM_LookupOrganisationalUnitByTypeRow)(this.Rows[index]));
                }
            }
            
            public event CM_LookupOrganisationalUnitByTypeRowChangeEventHandler CM_LookupOrganisationalUnitByTypeRowChanging;
            
            public event CM_LookupOrganisationalUnitByTypeRowChangeEventHandler CM_LookupOrganisationalUnitByTypeRowChanged;
            
            public event CM_LookupOrganisationalUnitByTypeRowChangeEventHandler CM_LookupOrganisationalUnitByTypeRowDeleting;
            
            public event CM_LookupOrganisationalUnitByTypeRowChangeEventHandler CM_LookupOrganisationalUnitByTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCM_LookupOrganisationalUnitByTypeRow(CM_LookupOrganisationalUnitByTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow AddCM_LookupOrganisationalUnitByTypeRow(CM_LookupOrganisationalUnitRow parentCM_LookupOrganisationalUnitRowByFK_LookupOrganisationalUnitByType_OrganisationalUnitID, string CodeID, System.DateTime EffectiveStartDate, System.DateTime EffectiveEndDate, string OrganisationalUnitName) {
                CM_LookupOrganisationalUnitByTypeRow rowCM_LookupOrganisationalUnitByTypeRow = ((CM_LookupOrganisationalUnitByTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CodeID,
                        EffectiveStartDate,
                        EffectiveEndDate,
                        OrganisationalUnitName};
                if ((parentCM_LookupOrganisationalUnitRowByFK_LookupOrganisationalUnitByType_OrganisationalUnitID != null)) {
                    columnValuesArray[1] = parentCM_LookupOrganisationalUnitRowByFK_LookupOrganisationalUnitByType_OrganisationalUnitID[0];
                }
                rowCM_LookupOrganisationalUnitByTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCM_LookupOrganisationalUnitByTypeRow);
                return rowCM_LookupOrganisationalUnitByTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow FindByOrganisationalUnitTypeID(int OrganisationalUnitTypeID) {
                return ((CM_LookupOrganisationalUnitByTypeRow)(this.Rows.Find(new object[] {
                            OrganisationalUnitTypeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CM_LookupOrganisationalUnitByTypeDataTable cln = ((CM_LookupOrganisationalUnitByTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CM_LookupOrganisationalUnitByTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrganisationalUnitTypeID = base.Columns["OrganisationalUnitTypeID"];
                this.columnOrganisationalUnitID = base.Columns["OrganisationalUnitID"];
                this.columnCodeID = base.Columns["CodeID"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnOrganisationalUnitName = base.Columns["OrganisationalUnitName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrganisationalUnitTypeID = new global::System.Data.DataColumn("OrganisationalUnitTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitTypeID);
                this.columnOrganisationalUnitID = new global::System.Data.DataColumn("OrganisationalUnitID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitID);
                this.columnCodeID = new global::System.Data.DataColumn("CodeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeID);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnOrganisationalUnitName = new global::System.Data.DataColumn("OrganisationalUnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrganisationalUnitTypeID}, true));
                this.columnOrganisationalUnitTypeID.AutoIncrement = true;
                this.columnOrganisationalUnitTypeID.AutoIncrementSeed = -1;
                this.columnOrganisationalUnitTypeID.AutoIncrementStep = -1;
                this.columnOrganisationalUnitTypeID.AllowDBNull = false;
                this.columnOrganisationalUnitTypeID.ReadOnly = true;
                this.columnOrganisationalUnitTypeID.Unique = true;
                this.columnOrganisationalUnitID.AllowDBNull = false;
                this.columnOrganisationalUnitID.MaxLength = 50;
                this.columnCodeID.AllowDBNull = false;
                this.columnCodeID.MaxLength = 50;
                this.columnEffectiveStartDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow NewCM_LookupOrganisationalUnitByTypeRow() {
                return ((CM_LookupOrganisationalUnitByTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CM_LookupOrganisationalUnitByTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CM_LookupOrganisationalUnitByTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CM_LookupOrganisationalUnitByTypeRowChanged != null)) {
                    this.CM_LookupOrganisationalUnitByTypeRowChanged(this, new CM_LookupOrganisationalUnitByTypeRowChangeEvent(((CM_LookupOrganisationalUnitByTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CM_LookupOrganisationalUnitByTypeRowChanging != null)) {
                    this.CM_LookupOrganisationalUnitByTypeRowChanging(this, new CM_LookupOrganisationalUnitByTypeRowChangeEvent(((CM_LookupOrganisationalUnitByTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CM_LookupOrganisationalUnitByTypeRowDeleted != null)) {
                    this.CM_LookupOrganisationalUnitByTypeRowDeleted(this, new CM_LookupOrganisationalUnitByTypeRowChangeEvent(((CM_LookupOrganisationalUnitByTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CM_LookupOrganisationalUnitByTypeRowDeleting != null)) {
                    this.CM_LookupOrganisationalUnitByTypeRowDeleting(this, new CM_LookupOrganisationalUnitByTypeRowChangeEvent(((CM_LookupOrganisationalUnitByTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCM_LookupOrganisationalUnitByTypeRow(CM_LookupOrganisationalUnitByTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OfficesDataSet ds = new OfficesDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CM_LookupOrganisationalUnitByTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CM_LookupOrganisationalUnitRow : global::System.Data.DataRow {
            
            private CM_LookupOrganisationalUnitDataTable tableCM_LookupOrganisationalUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CM_LookupOrganisationalUnitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCM_LookupOrganisationalUnit = ((CM_LookupOrganisationalUnitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitID {
                get {
                    return ((string)(this[this.tableCM_LookupOrganisationalUnit.OrganisationalUnitIDColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnit.OrganisationalUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitName {
                get {
                    return ((string)(this[this.tableCM_LookupOrganisationalUnit.OrganisationalUnitNameColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnit.OrganisationalUnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCM_LookupOrganisationalUnit.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnit.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCM_LookupOrganisationalUnit.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'CM_LookupOrganisationalUnit\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnit.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableCM_LookupOrganisationalUnit.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveEndDateNull() {
                this[this.tableCM_LookupOrganisationalUnit.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow[] GetCM_LookupOrganisationalUnitByTypeRows() {
                if ((this.Table.ChildRelations["FK_LookupOrganisationalUnitByType_OrganisationalUnitID"] == null)) {
                    return new CM_LookupOrganisationalUnitByTypeRow[0];
                }
                else {
                    return ((CM_LookupOrganisationalUnitByTypeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LookupOrganisationalUnitByType_OrganisationalUnitID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CM_LookupOrganisationalUnitByTypeRow : global::System.Data.DataRow {
            
            private CM_LookupOrganisationalUnitByTypeDataTable tableCM_LookupOrganisationalUnitByType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CM_LookupOrganisationalUnitByTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCM_LookupOrganisationalUnitByType = ((CM_LookupOrganisationalUnitByTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrganisationalUnitTypeID {
                get {
                    return ((int)(this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitTypeIDColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitID {
                get {
                    return ((string)(this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitIDColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodeID {
                get {
                    return ((string)(this[this.tableCM_LookupOrganisationalUnitByType.CodeIDColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.CodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCM_LookupOrganisationalUnitByType.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCM_LookupOrganisationalUnitByType.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'CM_LookupOrganisationalUnitByTy" +
                                "pe\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitName {
                get {
                    if (this.IsOrganisationalUnitNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitNameColumn]));
                    }
                }
                set {
                    this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow LookupOrganisationalUnitRow {
                get {
                    return ((CM_LookupOrganisationalUnitRow)(this.GetParentRow(this.Table.ParentRelations["FK_LookupOrganisationalUnitByType_OrganisationalUnitID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LookupOrganisationalUnitByType_OrganisationalUnitID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableCM_LookupOrganisationalUnitByType.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveEndDateNull() {
                this[this.tableCM_LookupOrganisationalUnitByType.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationalUnitNameNull() {
                return this.IsNull(this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationalUnitNameNull() {
                this[this.tableCM_LookupOrganisationalUnitByType.OrganisationalUnitNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CM_LookupOrganisationalUnitRowChangeEvent : global::System.EventArgs {
            
            private CM_LookupOrganisationalUnitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRowChangeEvent(CM_LookupOrganisationalUnitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CM_LookupOrganisationalUnitByTypeRowChangeEvent : global::System.EventArgs {
            
            private CM_LookupOrganisationalUnitByTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRowChangeEvent(CM_LookupOrganisationalUnitByTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CM_LookupOrganisationalUnitByTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591