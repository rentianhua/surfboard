//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HiiP.Framework.Security.UserManagement.BusinessEntity {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LookupOrganisationalUnitDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LookupOrganisationalUnitDataSet : global::System.Data.DataSet {
        
        private LookupOrganisationalUnitDataTable tableLookupOrganisationalUnit;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LookupOrganisationalUnitDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected LookupOrganisationalUnitDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LookupOrganisationalUnit"] != null)) {
                    base.Tables.Add(new LookupOrganisationalUnitDataTable(ds.Tables["LookupOrganisationalUnit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LookupOrganisationalUnitDataTable LookupOrganisationalUnit {
            get {
                return this.tableLookupOrganisationalUnit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            LookupOrganisationalUnitDataSet cln = ((LookupOrganisationalUnitDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LookupOrganisationalUnit"] != null)) {
                    base.Tables.Add(new LookupOrganisationalUnitDataTable(ds.Tables["LookupOrganisationalUnit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLookupOrganisationalUnit = ((LookupOrganisationalUnitDataTable)(base.Tables["LookupOrganisationalUnit"]));
            if ((initTable == true)) {
                if ((this.tableLookupOrganisationalUnit != null)) {
                    this.tableLookupOrganisationalUnit.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "LookupOrganisationalUnitDataSet";
            this.Prefix = "";
            this.Namespace = "http://hiip.ooh.dhs.vic.gov.au/LookupOrganisationalUnitDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLookupOrganisationalUnit = new LookupOrganisationalUnitDataTable();
            base.Tables.Add(this.tableLookupOrganisationalUnit);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLookupOrganisationalUnit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LookupOrganisationalUnitDataSet ds = new LookupOrganisationalUnitDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LookupOrganisationalUnitRowChangeEventHandler(object sender, LookupOrganisationalUnitRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LookupOrganisationalUnitDataTable : global::System.Data.TypedTableBase<LookupOrganisationalUnitRow> {
            
            private global::System.Data.DataColumn columnOrganisationalUnitID;
            
            private global::System.Data.DataColumn columnOrganisationalUnitName;
            
            private global::System.Data.DataColumn columnOrganisationalUnitTypeID;
            
            private global::System.Data.DataColumn columnUnitNumber;
            
            private global::System.Data.DataColumn columnStreetNumber;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSuffix;
            
            private global::System.Data.DataColumn columnSuburb;
            
            private global::System.Data.DataColumn columnPostCode;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnTollFreePhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnVersionNo;
            
            private global::System.Data.DataColumn columnTransactionID;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedTime;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedTime;
            
            private global::System.Data.DataColumn columnAddressID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitDataTable() {
                this.TableName = "LookupOrganisationalUnit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LookupOrganisationalUnitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LookupOrganisationalUnitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitIDColumn {
                get {
                    return this.columnOrganisationalUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitNameColumn {
                get {
                    return this.columnOrganisationalUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationalUnitTypeIDColumn {
                get {
                    return this.columnOrganisationalUnitTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNumberColumn {
                get {
                    return this.columnUnitNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetNumberColumn {
                get {
                    return this.columnStreetNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuffixColumn {
                get {
                    return this.columnSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuburbColumn {
                get {
                    return this.columnSuburb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostCodeColumn {
                get {
                    return this.columnPostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TollFreePhoneColumn {
                get {
                    return this.columnTollFreePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VersionNoColumn {
                get {
                    return this.columnVersionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionIDColumn {
                get {
                    return this.columnTransactionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedTimeColumn {
                get {
                    return this.columnCreatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedTimeColumn {
                get {
                    return this.columnLastUpdatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressIDColumn {
                get {
                    return this.columnAddressID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitRow this[int index] {
                get {
                    return ((LookupOrganisationalUnitRow)(this.Rows[index]));
                }
            }
            
            public event LookupOrganisationalUnitRowChangeEventHandler LookupOrganisationalUnitRowChanging;
            
            public event LookupOrganisationalUnitRowChangeEventHandler LookupOrganisationalUnitRowChanged;
            
            public event LookupOrganisationalUnitRowChangeEventHandler LookupOrganisationalUnitRowDeleting;
            
            public event LookupOrganisationalUnitRowChangeEventHandler LookupOrganisationalUnitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLookupOrganisationalUnitRow(LookupOrganisationalUnitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitRow AddLookupOrganisationalUnitRow(
                        string OrganisationalUnitID, 
                        string OrganisationalUnitName, 
                        string OrganisationalUnitTypeID, 
                        string UnitNumber, 
                        string StreetNumber, 
                        string Street, 
                        string Type, 
                        string Suffix, 
                        string Suburb, 
                        string PostCode, 
                        string State, 
                        string Phone, 
                        string Fax, 
                        string Mobile, 
                        string TollFreePhone, 
                        string Email, 
                        string EffectiveStartDate, 
                        string EffectiveEndDate, 
                        string VersionNo, 
                        string TransactionID, 
                        string CreatedBy, 
                        string CreatedTime, 
                        string LastUpdatedBy, 
                        string LastUpdatedTime, 
                        string AddressID) {
                LookupOrganisationalUnitRow rowLookupOrganisationalUnitRow = ((LookupOrganisationalUnitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrganisationalUnitID,
                        OrganisationalUnitName,
                        OrganisationalUnitTypeID,
                        UnitNumber,
                        StreetNumber,
                        Street,
                        Type,
                        Suffix,
                        Suburb,
                        PostCode,
                        State,
                        Phone,
                        Fax,
                        Mobile,
                        TollFreePhone,
                        Email,
                        EffectiveStartDate,
                        EffectiveEndDate,
                        VersionNo,
                        TransactionID,
                        CreatedBy,
                        CreatedTime,
                        LastUpdatedBy,
                        LastUpdatedTime,
                        AddressID};
                rowLookupOrganisationalUnitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLookupOrganisationalUnitRow);
                return rowLookupOrganisationalUnitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LookupOrganisationalUnitDataTable cln = ((LookupOrganisationalUnitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LookupOrganisationalUnitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrganisationalUnitID = base.Columns["OrganisationalUnitID"];
                this.columnOrganisationalUnitName = base.Columns["OrganisationalUnitName"];
                this.columnOrganisationalUnitTypeID = base.Columns["OrganisationalUnitTypeID"];
                this.columnUnitNumber = base.Columns["UnitNumber"];
                this.columnStreetNumber = base.Columns["StreetNumber"];
                this.columnStreet = base.Columns["Street"];
                this.columnType = base.Columns["Type"];
                this.columnSuffix = base.Columns["Suffix"];
                this.columnSuburb = base.Columns["Suburb"];
                this.columnPostCode = base.Columns["PostCode"];
                this.columnState = base.Columns["State"];
                this.columnPhone = base.Columns["Phone"];
                this.columnFax = base.Columns["Fax"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnTollFreePhone = base.Columns["TollFreePhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnVersionNo = base.Columns["VersionNo"];
                this.columnTransactionID = base.Columns["TransactionID"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedTime = base.Columns["CreatedTime"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedTime = base.Columns["LastUpdatedTime"];
                this.columnAddressID = base.Columns["AddressID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrganisationalUnitID = new global::System.Data.DataColumn("OrganisationalUnitID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitID);
                this.columnOrganisationalUnitName = new global::System.Data.DataColumn("OrganisationalUnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitName);
                this.columnOrganisationalUnitTypeID = new global::System.Data.DataColumn("OrganisationalUnitTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisationalUnitTypeID);
                this.columnUnitNumber = new global::System.Data.DataColumn("UnitNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNumber);
                this.columnStreetNumber = new global::System.Data.DataColumn("StreetNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreetNumber);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSuffix = new global::System.Data.DataColumn("Suffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuffix);
                this.columnSuburb = new global::System.Data.DataColumn("Suburb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuburb);
                this.columnPostCode = new global::System.Data.DataColumn("PostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostCode);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnTollFreePhone = new global::System.Data.DataColumn("TollFreePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTollFreePhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnVersionNo = new global::System.Data.DataColumn("VersionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionNo);
                this.columnTransactionID = new global::System.Data.DataColumn("TransactionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionID);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedTime = new global::System.Data.DataColumn("CreatedTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedTime);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedTime = new global::System.Data.DataColumn("LastUpdatedTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedTime);
                this.columnAddressID = new global::System.Data.DataColumn("AddressID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitRow NewLookupOrganisationalUnitRow() {
                return ((LookupOrganisationalUnitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LookupOrganisationalUnitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LookupOrganisationalUnitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LookupOrganisationalUnitRowChanged != null)) {
                    this.LookupOrganisationalUnitRowChanged(this, new LookupOrganisationalUnitRowChangeEvent(((LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LookupOrganisationalUnitRowChanging != null)) {
                    this.LookupOrganisationalUnitRowChanging(this, new LookupOrganisationalUnitRowChangeEvent(((LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LookupOrganisationalUnitRowDeleted != null)) {
                    this.LookupOrganisationalUnitRowDeleted(this, new LookupOrganisationalUnitRowChangeEvent(((LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LookupOrganisationalUnitRowDeleting != null)) {
                    this.LookupOrganisationalUnitRowDeleting(this, new LookupOrganisationalUnitRowChangeEvent(((LookupOrganisationalUnitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLookupOrganisationalUnitRow(LookupOrganisationalUnitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LookupOrganisationalUnitDataSet ds = new LookupOrganisationalUnitDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LookupOrganisationalUnitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LookupOrganisationalUnitRow : global::System.Data.DataRow {
            
            private LookupOrganisationalUnitDataTable tableLookupOrganisationalUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LookupOrganisationalUnitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLookupOrganisationalUnit = ((LookupOrganisationalUnitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitID {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.OrganisationalUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganisationalUnitID\' in table \'LookupOrganisationalUnit\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.OrganisationalUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitName {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.OrganisationalUnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganisationalUnitName\' in table \'LookupOrganisationalUnit\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.OrganisationalUnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganisationalUnitTypeID {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.OrganisationalUnitTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganisationalUnitTypeID\' in table \'LookupOrganisationalUni" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.OrganisationalUnitTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNumber {
                get {
                    if (this.IsUnitNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.UnitNumberColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.UnitNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StreetNumber {
                get {
                    if (this.IsStreetNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.StreetNumberColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.StreetNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    if (this.IsStreetNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.StreetColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    if (this.IsTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.TypeColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Suffix {
                get {
                    if (this.IsSuffixNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.SuffixColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.SuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Suburb {
                get {
                    if (this.IsSuburbNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.SuburbColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.SuburbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostCode {
                get {
                    if (this.IsPostCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.PostCodeColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.PostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    if (this.IsStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.StateColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    if (this.IsPhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.PhoneColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    if (this.IsFaxNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.FaxColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    if (this.IsMobileNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.MobileColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TollFreePhone {
                get {
                    if (this.IsTollFreePhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.TollFreePhoneColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.TollFreePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    if (this.IsEmailNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.EmailColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectiveStartDate {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.EffectiveStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveStartDate\' in table \'LookupOrganisationalUnit\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectiveEndDate {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'LookupOrganisationalUnit\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VersionNo {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.VersionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionNo\' in table \'LookupOrganisationalUnit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.VersionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransactionID {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.TransactionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionID\' in table \'LookupOrganisationalUnit\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.TransactionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'LookupOrganisationalUnit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedTime {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.CreatedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedTime\' in table \'LookupOrganisationalUnit\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.CreatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'LookupOrganisationalUnit\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedTime {
                get {
                    try {
                        return ((string)(this[this.tableLookupOrganisationalUnit.LastUpdatedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedTime\' in table \'LookupOrganisationalUnit\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.LastUpdatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressID {
                get {
                    if (this.IsAddressIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableLookupOrganisationalUnit.AddressIDColumn]));
                    }
                }
                set {
                    this[this.tableLookupOrganisationalUnit.AddressIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationalUnitIDNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.OrganisationalUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationalUnitIDNull() {
                this[this.tableLookupOrganisationalUnit.OrganisationalUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationalUnitNameNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.OrganisationalUnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationalUnitNameNull() {
                this[this.tableLookupOrganisationalUnit.OrganisationalUnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationalUnitTypeIDNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.OrganisationalUnitTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationalUnitTypeIDNull() {
                this[this.tableLookupOrganisationalUnit.OrganisationalUnitTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNumberNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.UnitNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNumberNull() {
                this[this.tableLookupOrganisationalUnit.UnitNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNumberNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.StreetNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNumberNull() {
                this[this.tableLookupOrganisationalUnit.StreetNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableLookupOrganisationalUnit.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableLookupOrganisationalUnit.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuffixNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.SuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuffixNull() {
                this[this.tableLookupOrganisationalUnit.SuffixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuburbNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.SuburbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuburbNull() {
                this[this.tableLookupOrganisationalUnit.SuburbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostCodeNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.PostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostCodeNull() {
                this[this.tableLookupOrganisationalUnit.PostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableLookupOrganisationalUnit.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableLookupOrganisationalUnit.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableLookupOrganisationalUnit.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableLookupOrganisationalUnit.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTollFreePhoneNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.TollFreePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTollFreePhoneNull() {
                this[this.tableLookupOrganisationalUnit.TollFreePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableLookupOrganisationalUnit.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveStartDateNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.EffectiveStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveStartDateNull() {
                this[this.tableLookupOrganisationalUnit.EffectiveStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveEndDateNull() {
                this[this.tableLookupOrganisationalUnit.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVersionNoNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.VersionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVersionNoNull() {
                this[this.tableLookupOrganisationalUnit.VersionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionIDNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.TransactionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionIDNull() {
                this[this.tableLookupOrganisationalUnit.TransactionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableLookupOrganisationalUnit.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedTimeNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.CreatedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedTimeNull() {
                this[this.tableLookupOrganisationalUnit.CreatedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedByNull() {
                this[this.tableLookupOrganisationalUnit.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedTimeNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.LastUpdatedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedTimeNull() {
                this[this.tableLookupOrganisationalUnit.LastUpdatedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressIDNull() {
                return this.IsNull(this.tableLookupOrganisationalUnit.AddressIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressIDNull() {
                this[this.tableLookupOrganisationalUnit.AddressIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LookupOrganisationalUnitRowChangeEvent : global::System.EventArgs {
            
            private LookupOrganisationalUnitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitRowChangeEvent(LookupOrganisationalUnitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LookupOrganisationalUnitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591